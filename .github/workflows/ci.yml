# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    name: Build & Test (Gradle Java 21)
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [21]
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Build and run tests
        run: ./gradlew clean build test

      - name: Run integration tests (if present)
        run: ./gradlew integrationTest
        continue-on-error: true

      - name: Run static analysis (Checkstyle)
        run: ./gradlew checkstyleMain checkstyleTest

      - name: Run code formatting (Spotless)
        run: ./gradlew spotlessCheck

      - name: Run dependency vulnerability scanner
        uses: gradle/actions/dependency-submission@v3

      - name: Generate code coverage report
        run: ./gradlew jacocoTestReport

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests/test

      - name: Archive code coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/reports/jacoco/test/html

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-artifact
          path: build/libs/*.jar

  release:
    name: Release & Tag
    runs-on: ubuntu-latest
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Build JAR for Release
        run: ./gradlew clean bootJar

      - name: Upload JAR as release asset
        uses: softprops/action-gh-release@v2
        with:
          files: build/libs/*.jar
          name: Trading Core Release

      - name: Create release notes
        uses: actions/github-script@v7
        with:
          script: |
            const { GITHUB_REF_NAME } = process.env;
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: GITHUB_REF_NAME,
              name: `Release ${GITHUB_REF_NAME}`,
              draft: false,
              prerelease: false
            });